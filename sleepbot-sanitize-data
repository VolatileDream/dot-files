#!/usr/bin/env python3
#
# Reads in sleepbot data in CSV format, and turns it into a format that
# state-stream-vis can understand.
#
import datetime as dt

import sys

DateTimeFormat="%Y-%m-%dT%H:%M"

for line in sys.stdin:

    # line format is:
    #    date-awake
    #    , hour:min asleep (this might be the date before)
    #    , hour:min awake
    #    , time slept
    #    , notes
    #
    # it's guaranteed that asleep comes before awake

    if 'Date' in line:
        # first line has headers, skip
        continue;

    segments = line.split(',')

    # Rebuild the time we woke up, it's in parts, so bleh.
    dt_awake = dt.datetime.strptime(segments[0] + " " + segments[2], '%y/%m/%d %H:%M')
 
    time_asleep = dt.datetime.strptime(segments[1], '%H:%M').time()

    # the ingested format has shit accuracy for "time asleep" (segments[3]).
    # so we ignore it entirely, and do temporal math by hand. :c fuck this shit.

    # times use a 24 hour clock, and the format guarantees that asleep comes before awake.
    fraction_minutes = (dt_awake.minute - time_asleep.minute) / 60.0
    increment_hours = (dt_awake.hour - time_asleep.hour) % 24
    hours_asleep = dt.timedelta(hours=increment_hours + fraction_minutes)

    dt_asleep = dt_awake - hours_asleep

    print("asleep", dt_asleep.strftime(DateTimeFormat))
    print("awake", dt_awake.strftime(DateTimeFormat))

