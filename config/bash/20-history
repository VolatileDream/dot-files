# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignorespace

# Set the time format to empty, to force bash to write the timestamp to storage.
HISTTIMEFORMAT=" "

# don't allow for editing of history lines (backspace after Ctrl-r)
set revert-all-at-newline on

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# do really fancy stuff with history (keep it "forever")
## Sourced: https://twitter.com/michaelhoffman/status/639178145673932800
# this breaks CTRL-R
setup-history() {
  local -r day="$(printf '%(%Y/%m/%d)T' )"
  local -r prefix="${HOME}/.history/${day}/${HOSTNAME}"

  local suffix=""
  if [ -z "$HIST_PARENT" ]; then
      # This is required because there's no simpler way to pass the
      # PID of the top level history to any children.
      export HIST_PARENT="$$"
      suffix="$(printf '%(%H-%M)T' )"
  else
      # Child shells will have their own history. This is nice for things like
      # vim, where we can continue to run the same command set as we work on
      # various files and things.
      suffix="_child"
  fi
  HISTFILE="${prefix}_${HIST_PARENT}_${suffix}"
  # Save some time and only invoke mkdir if the directory doesn't exist.
  [ -d "${HISTFILE%/*}" ] || mkdir -p "${HISTFILE%/*}/"
}
setup-history
unset -f setup-history

# append to the history file, don't overwrite it.
# This is necessary for VIM setup, the rest of the time it's fine.
shopt -s histappend

# Output all of the history from every history file ever.
history::cat() {
  find ~/.history/ -type f | xargs cat
}

# C-r breaks once you have a bunch of history files so we have to rebuild it
history::pick () {
    # 1/10_000 error, use count-distinct to approximate the number of elements we expect.
    local approx_count=$(history::cat | count-distinct)
    local line=$(history::cat | bloom-filter -p 0.00001 -n ${approx_count} -r | pick)

    if [ -n "$line" ]; then
        history -s "$line"
        eval "$line"
    fi
}
# define an alternative for systems where we may not have 'bloom-filter' and 'pick'
history::grep () { grep --recursive --no-filename "$@" ~/.history | uniq ; }

