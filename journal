#!/bin/bash

# configuration file
CONFIG="$HOME/.config/journal-config.ini"

config(){
	if [ $# -eq 0 ]; then
		if [ -e "$CONFIG" ]; then
			cat "$CONFIG"
		fi
		return
	fi
	# update the config
	SECTION="$1" ; shift ; KEY="$1" ; shift
	if [ $# -gt 0 ]; then
		inifile -f "$CONFIG" -c -s "$SECTION" -k "$KEY" -v "$@"
	else
		# double evalute the line
		# this allows for variable expansion of things in the config file.
		# which is only really useful for things like $HOME
		# TODO restrict it to $HOME/~?
		echo `eval echo "$(inifile -f "$CONFIG" -n -s "$SECTION" -k "$KEY")"`
	fi
}

# stuff that should be in configs
BIN="$(config journal bin)"
BUILD_PREFIX="$(config journal build-prefix)"
QUERY_PREFIX="$(config journal query-prefix)"

err(){
	echo -ne "\e[31m"
	echo $@ >> /dev/stderr
	echo -ne "\e[0m"
}

query(){
	if [ $# -eq 0 ]; then
		err "query requires a data source and query be specified"
		exit 1
	fi

	SRC="$1" ; shift
	if [ -e "$BIN/${QUERY_PREFIX}${SRC}" ]; then
		# pass the query along
		"$BIN/${QUERY_PREFIX}${SRC}" $@
	else
		err "Cannot query source '$SRC': could not find $BIN/${QUERY_PREFIX}${SRC}"
		exit 1
	fi
}

build(){
	# Args are laid out in 2 groups:
	#  pass along flags
	# --
	#  sources
	ARGS=""
	while [ $# -gt 0 ]; do
		last_arg="$1" ; shift
		if [ "$last_arg" = "--" ]; then
			break
		fi
		ARGS="$ARGS $last_arg"
	done

	if [ $# -gt 0 ]; then
		SOURCES="$@"
	else
		SOURCES=$(ls "${BIN}/${BUILD_PREFIX}"* 2> /dev/null | sed "s_${BIN}/${BUILD_PREFIX}__")

		if [ $? -ne 0 -o -z "$SOURCES" ]; then
			# nothing to build
			return
		fi
		echo -n "Building sources: "
		echo -n "$SOURCES" | tr '\n' ' '
		echo
	fi

	for SRC in $SOURCES ; do
		if [ -e "${BIN}/${BUILD_PREFIX}${SRC}" ]; then
			"${BIN}/${BUILD_PREFIX}${SRC}" $ARGS
		else
			err "Unable to build $SRC: could not find $BIN/${QUERY_PREFIX}${SRC}"
		fi
	done
}

# TODO do option parsing here

if [ $# -eq 0 -o "$1" = "edit" ]; then
	# invoke update first
	$0 update
	edit
else
COMMAND="$1" ; shift
	case $COMMAND in
		config)
			config $@
			;;
		view)
			view $@
			;;
		clean)
			build --clean -- $@
			;;
		update)
			# TODO get journal file
			build --incremental --
			;;
		build)
			# TODO get journal directory/files
			build --clean --full -- $@
			;;
		query)
			query $@
			;;
		search)
			query index $@
			;;
		help|-h|--help)
			echo "Usage: $0 [options] <command>"
			echo "  Update a users private journal"
			echo
			echo "Available commands are:"
			echo "- build [source]*"
			echo "    rebuilds the generated files for the specified sources, defaults"
			echo "    to rebuilding all data sources"
			echo
			echo "- clean [source]*"
			echo "    removes all generated files for the specified sources, defaults"
			echo "    to removing files for all sources"
			echo
			echo "- config <source> <key> [value]"
			echo "    reads or writes the config for the specified source variable."
			echo "    without arguments it dumps the config"
			echo
			echo "- edit"
			echo "    edit the most recent journal entry (default)"
			echo
			echo "- query <source> query*"
			echo "    query the generated data from the specific source"
			echo
			echo "- search query"
			echo "    shortcut for 'query index'"
			echo
			echo "- update"
			echo "    updates the LATEST entry to point to the current date then"
			echo "    runs an incremental update of all generated data sources"
			echo
			echo "- view [date]* [date-range]*"
			echo "    view a particular set of date entries or range of entries"
			echo
			;;
		*)
			err "Journal command $COMMAND not found"
			exit 1
			;;
	esac
fi

