#!/bin/bash

# configuration file
CONFIG="$HOME/.config/journal-config.ini"

config(){
	if [ $# -eq 0 ]; then
		if [ -e "$CONFIG" ]; then
			cat "$CONFIG"
		fi
		return
	fi
	# update the config
	SECTION="$1" ; shift ; KEY="$1" ; shift
	if [ $# -gt 0 ]; then
		inifile -f "$CONFIG" -c -s "$SECTION" -k "$KEY" -v "$@"
	else
		# TODO allow dependent config variables
		VALUE="$(inifile -f "$CONFIG" -n -s "$SECTION" -k "$KEY")"
		echo $VALUE | sed "s_\${HOME}_${HOME}_"
	fi
}

# stuff that should be in configs
BIN="$(config journal bin)"
BUILD_PREFIX="$(config journal build-prefix)"
QUERY_PREFIX="$(config journal query-prefix)"
JOURNAL_PATH="$(config journal path)"		# stored path
LAST_ENTRY_DATE="$(config journal last-date)"	# last entry date
LATEST="$(config journal latest)"		# file that contains the latest entry
ENTRY_SEPERATOR="$(config journal entry-seperator)"	# entry seperators
NOW="$(date '+%Y/%m/%d')"			# current date

err(){
	echo -ne "\e[31m"
	echo $@ >> /dev/stderr
	echo -ne "\e[0m"
}

query(){
	if [ $# -eq 0 ]; then
		err "query requires a data source and query be specified"
		exit 1
	fi

	SRC="$1" ; shift
	COM="$BIN/${QUERY_PREFIX}${SRC}"
	if [ -e "$COM" -a -x "$COM" ]; then
		# pass the query along
		"$COM" $@
	else
		err "Cannot query source '$SRC': could not find $BIN/${QUERY_PREFIX}${SRC}"
		exit 1
	fi
}

build(){
	# Args are laid out in 2 groups:
	#  pass along flags
	# --
	#  sources
	ARGS=""
	while [ $# -gt 0 ]; do
		last_arg="$1" ; shift
		if [ "$last_arg" = "--" ]; then
			break
		fi
		ARGS="$ARGS $last_arg"
	done

	if [ $# -gt 0 ]; then
		SOURCES="$@"
	else
		SOURCES=$(ls "${BIN}/${BUILD_PREFIX}"* 2> /dev/null | sed "s_${BIN}/${BUILD_PREFIX}__")

		if [ $? -ne 0 -o -z "$SOURCES" ]; then
			# nothing to build
			return
		fi
		echo -n "Building sources: "
		echo -n "$SOURCES" | tr '\n' ' '
		echo
	fi

	for SRC in $SOURCES ; do
		COM="${BIN}/${BUILD_PREFIX}${SRC}"
		if [ -e "$COM" ]; then
			if [ -x "$COM" ]; then
				mkdir -p "$(config journal generated)"
				"$COM" $ARGS
			fi
		else
			err "Unable to build $SRC: could not find/execute $BIN/${QUERY_PREFIX}${SRC}"
		fi
	done
}

update(){
	FILE="${JOURNAL_PATH}/${LATEST}"
	
	if [ "$NOW" != "$LAST_ENTRY_DATE" ]; then
		# we need to do an update if the file exists, and has size > 0
		if [ -f "$FILE" -a -s "$FILE" ]; then

			# make sure there's a newline at the end
			echo >> "$FILE"

			# make sure the archive directory exists
			mkdir -p "${JOURNAL_PATH}/archive/"
			# figure out the file name
			NEW_FILE="${JOURNAL_PATH}/archive/$(echo "$LAST_ENTRY_DATE" | sed 's_/_-_g')"
			# move the file
			mv "$FILE" "${NEW_FILE}"

			# because some things record file names + stuff
			build --incremental "$NEW_FILE" --

			# permission stuff to make it read only
			chmod a-wx "$NEW_FILE" ; chmod og-r "$NEW_FILE"
		fi
	fi
	
}

edit(){
	FILE="${JOURNAL_PATH}/${LATEST}"
	config journal last-date "$NOW"
	if [ ! -f "$FILE" ]; then
		mkdir -p "$JOURNAL_PATH"
		echo "${ENTRY_SEPERATOR}${NOW}" >> "$FILE"
	fi
	sensible-editor "$FILE"
}

# TODO do option parsing here

if [ $# -eq 0 -o "$1" = "edit" ]; then
	# invoke update first
	"$0" update
	edit
else
	COMMAND="$1" ; shift
	case $COMMAND in
		build)
			build --full "$JOURNAL_PATH/archive" -- $@ ;;
		clean)
			build --clean -- $@
			echo rm -r "$(config journal generated)"
			rm --recursive --verbose --one-file-system --interactive=once "$(config journal generated)"
			;;
		config)
			config $@ ;;
		query)
			query $@ ;;
		search)
			query index $@ ;;
		update)
			update ;;
		view)
			view $@ ;;
		help|-h|--help)
			echo "Usage: $0 [options] <command>"
			echo "  Update your private journal"
			echo
			echo "Available commands are:"
			echo "- build [source]*"
			echo "    rebuilds the generated files for the specified sources, defaults"
			echo "    to rebuilding all data sources"
			echo
			echo "- clean [source]*"
			echo "    removes all generated files for the specified sources, defaults"
			echo "    to removing files for all sources"
			echo
			echo "- config <source> <key> [value]"
			echo "    reads or writes the config for the specified source variable."
			echo "    without arguments it dumps the config"
			echo
			echo "- edit"
			echo "    edit the most recent journal entry (default)"
			echo
			echo "- query <source> query*"
			echo "    query the generated data from the specific source"
			echo
			echo "- search query"
			echo "    shortcut for 'query index'"
			echo
			echo "- update"
			echo "    updates the LATEST entry to point to the current date then"
			echo "    runs an incremental update of all generated data sources"
			echo
			echo "- view [date]* [date-range]*"
			echo "    view a particular set of date entries or range of entries"
			echo
			;;
		*)
			err "Journal command $COMMAND not found"
			exit 1
			;;
	esac
fi

