#!/bin/bash


__journal_view(){
	local cur base opts
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"

	# this disgusting shell line
	COMPREPLY=( $(ls $(journal config journal path)/archive/* |
		# strip out the file path
		grep -Eo "[^/]*$" |
		# get only the next chunk of the date
		# TODO relies on file date stamp encoding
		grep -o "^${cur}[^-]*-" |
		# grab unique entries
		uniq ) )

	return 0
}

__journal_config(){
	local cur base opts
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"

	if [ $COMP_CWORD -eq 2 ]; then
		# doing the second word
		opts="$(journal config | grep '\[' | tr -d '[]')"
		
	elif [ $COMP_CWORD -eq 3 ]; then
		# doing third thing
		opts="$(journal config | write-from-to "\\\\[$prev\\\\]" '\\[' | sed 's/ =.*//')"
	fi

	COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )

	return 0
}

__journal(){

	local cur base opts
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	base="${COMP_WORDS[1]}"

	case ${base} in
		# things that don't complete:
		edit|update|search)
			opts=""
			;;
		# things that complete to build-* entries
		build|clean)
			opts="`ls $(journal config journal bin)/build-* | sed 's_.*/build-__'`"
			;;
		# things that complete to query-* entries
		query)
			opts="`ls $(journal config journal bin)/query-* | sed 's_.*/query-__'`"
			;;
		config)
			__journal_config
			;;
		view)
			__journal_view
			;;
		*)
			opts="build clean config edit query search update view"
			;;
	esac

	if [ ! -z "$COMPREPLY" ]; then
		return 0
	fi
	COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )

	return 0
}

complete -F __journal journal
